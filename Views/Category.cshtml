@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Category>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.PublishedContent;
@using Umbraco.Cms.Core.Models.Blocks;
@using Umbraco.Cms.Core.Models
@{
	Layout = "_Layout.cshtml";
	
}

@await Html.PartialAsync("_BreadCrumb")

@{
    var selection = Umbraco.Content(Guid.Parse("cff7f32c-73cc-46ce-a426-41f9bbc65d9a"))
    .ChildrenOfType("bloggItem")
    .Where(x => x.IsVisible())
    .OrderByDescending(x => x.CreateDate)
    .Where(itemPage => itemPage.Value<IEnumerable<IPublishedContent>>("Test").Any(item => item.Id == Model.Id));

    var itemsPerPage = 12;
    var pageNumber = 1;
    
    if (!int.TryParse(Context.Request.Query["page"], out pageNumber))
    {
        pageNumber = 1;
    }

    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((pageNumber - 1) * itemsPerPage).Take(itemsPerPage);
}
    <section class="articles">
        <div class="container">
            <div class="row">
                <div class="col-12 articleContainer">
                    <div class="col-12 articleCardContainer">
                    @foreach (var item in pagedItems)
                    {
                        var tags = item.Value<IEnumerable<IPublishedContent>>("test");
                        var articleCardImage = item.Value<MediaWithCrops>("ArticleCardImage");
                    
                        <div class="col-5 col-md-3 articleCard">
                            <a href="@item.Url()">
                                <div class="publishDate"><small>@item.CreateDate.ToString("MMM dd")</small></div>
                                @if (item.HasValue("ArticleCardImage"))
                                {
                                    <img src="@articleCardImage.MediaUrl()" alt="@item.Value("ArticleCardTitle")">
                                }
                                @foreach(var tag in tags)
                                {
                                    <small class="pe-1">@tag.Value("categoryTitle")</small>
                                }
                                <p>@item.Value("ArticleCardTitle")</p>
                                <small>@item.Value("articleCardIntroText").ToString().Substring(0, 140)...</small>
                            </a>
                        </div>
                    }
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    
    
    
    <nav class="item-pagination" aria-label="Page navigation">
    @if (pageNumber > 1)
    {
        <a href="?page=@(pageNumber - 1)" class="item-link link-prev" aria-label="Previous">
            <span aria-hidden="true"><i class="fa-sharp fa-solid fa-chevron-left"></i></span>
        </a>
    }
    
    @for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
    {
        if (i == pageNumber)
        {
            <a href="?page=@i" class="item-link active">@i</a>
        }
        else
        {
            <a href="?page=@i" class="item-link">@i</a>
        }
    }
    
    @if (pageNumber < Math.Ceiling((decimal)totalItems / itemsPerPage))
    {
        <a href="?page=@(pageNumber + 1)" class="item-link item-next" aria-label="Next">
            <span aria-hidden="true"><i class="fa-sharp fa-solid fa-chevron-right"></i></span>
        </a>
    }
    </nav> 
